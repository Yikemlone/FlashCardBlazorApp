@page "/home"
@using System.Security.Claims
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthProvider
@inject HttpClient Http
@attribute [Authorize(Policy = "IsCustomer")]

<PageTitle>Home</PageTitle>

@if (_userOptions != null)
{
    <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
        <MudGrid>

            <MudItem sm="6">
                <div class="relative" style="width:100%; height:100%">

                    <div class="absolute" style="width:inherit; height:inherit">
                        <img style="border-radius: 10px; width:inherit; height:inherit" Src="https://generatorfun.com/code/uploads/Random-Japanese-image-10.jpg" />          
                    </div>

                    <div class="absolute pa-5 mt-10" style="width:inherit; height:inherit">
                        <InspiringQuotes/>
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Href="/flashcards" Class="mt-5">Today's words</MudButton>
                    </div>

                </div>
            </MudItem>

            <MudItem sm="6">
                <MudPaper Class="pa-5">
                    <DisplayUserOptions UserFlashCardOptions="_userOptions"/>
                </MudPaper>
            </MudItem>

            <MudItem sm="12">
                <ReviewableCards/>  
            </MudItem>

            <MudItem sm="6">Chart image</MudItem>
            <MudItem sm="6">Chart button and quote</MudItem>
        
        </MudGrid>
    </MudContainer>
} 
else 
{
    <MudProgressLinear Indeterminate=true></MudProgressLinear>
}


@code {
    private const string API_URL = "api/customer";

    private UserFlashCardOptions? _userOptions;


    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthProvider.GetAuthenticationStateAsync()).User.Identity;

        if (user != null & user.IsAuthenticated) 
        {
            _userOptions = await Http.GetFromJsonAsync<UserFlashCardOptions>(API_URL + "/get-options");
        }
    }
}
