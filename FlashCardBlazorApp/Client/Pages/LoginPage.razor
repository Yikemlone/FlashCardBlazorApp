@page "/login"

@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<PageTitle>Login</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium">
    <EditForm Model="@_model" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator />
            <MudCard Class="ma-16">
                <MudCardContent>
                    <div class="ma-13">
                        <MudTextField Label="Username" @bind-Value="_model.UserName" For="@(() => _model.UserName)" />
                        <MudTextField InputType="InputType.Password" Label="Password" Class="mt-3" @bind-Value="_model.Password" For="@(() => _model.Password)" />
                    </div>
                    <MudCheckBox @bind-Value="@_model.RememberMe" T="bool" Label="Remember Me" />
                </MudCardContent>

                <MudStack Row="true" Spacing="6" Justify="Justify.Center">
                    <MudText Typo="Typo.subtitle1" style="color: red">@_error</MudText>
                </MudStack>

                <MudStack Row="true" Spacing="6" Justify="Justify.Center" >
                    <MudButton Class="mb-6" ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary">Sign in</MudButton>
                    <MudButton Class="mb-6" Href="/register" Variant="Variant.Outlined" Color="Color.Secondary">Create account</MudButton>
                </MudStack>

            </MudCard>
    </EditForm>
</MudContainer>

@code {
    private LoginParameters _model = new(); 
    private string _error;

    async Task OnSubmit()
    {
        _error = null;

        try
        {
            await authStateProvider.Login(_model);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            _error = "A user by those credentials does not exist";
        }
    }
}