@using FlashCardBlazorApp.Models.Models
@inject HttpClient Http
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudPaper>
            <MudForm>

                <MudStack Row=true>
                    <MudSelect @bind-Value="_vocab.JLPT" Variant="Variant.Filled" Required RequiredError="You must select a JLPT Rating.">
                        <MudSelectItem Value="@("JLPT1")">JLPT1</MudSelectItem>
                        <MudSelectItem Value="@("JLPT2")">JLPT2</MudSelectItem>
                        <MudSelectItem Value="@("JLPT3")">JLPT3</MudSelectItem>
                        <MudSelectItem Value="@("JLPT4")">JLPT4</MudSelectItem>
                        <MudSelectItem Value="@("JLPT5")">JLPT5</MudSelectItem>
                    </MudSelect>

                    <MudSelect @bind-Value="_vocab.VocabPos" Variant="Variant.Filled" Required RequiredError="You must select an Vocab Pos.">
                        <MudSelectItem Value="@("Verb")">Verb</MudSelectItem>
                        <MudSelectItem Value="@("Noun")">Noun</MudSelectItem>
                        <MudSelectItem Value="@("Adjective")">Adjective</MudSelectItem>
                        <MudSelectItem Value="@("Adverb")">Adverb</MudSelectItem>
                    </MudSelect>
                </MudStack>

                <MudStack>
                    <MudTextField T="string" Label="VocabExpression" Variant="Variant.Filled" Required RequiredError="You must enter a VocabExpression." @bind-Value=_vocab.VocabExpression></MudTextField>
                    <MudTextField T="string" Label="VocabKana" Variant="Variant.Filled" Required RequiredError="You must enter a VocabKana." @bind-Value=@_vocab.VocabKana></MudTextField>
                    <MudTextField T="string" Label="SentenceExpression" Variant="Variant.Filled" Required RequiredError="You must enter a SentenceExpression." @bind-Value=@_vocab.SentenceExpression></MudTextField>
                    <MudTextField T="string" Label="SentenceKana" Variant="Variant.Filled" Required RequiredError="You must enter a SentenceKana." @bind-Value=@_vocab.SentenceKana></MudTextField>
                    <MudTextField T="string" Label="SentenceMeaning" Variant="Variant.Filled" Required RequiredError="You must enter a SentenceMeaning." @bind-Value=@_vocab.SentenceMeaning></MudTextField>
                    <MudTextField T="string" Label="VocabFurigana" Variant="Variant.Filled" Required RequiredError="You must enter a VocabFurigana." @bind-Value=@_vocab.VocabFurigana></MudTextField>
                    <MudTextField T="string" Label="SentenceFurigana" Variant="Variant.Filled" Required RequiredError="You must enter a SentenceFurigana." @bind-Value=@_vocab.SentenceFurigana></MudTextField>
                </MudStack>

            </MudForm>
        </MudPaper>
    </DialogContent>

    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Save</MudButton>
        <MudButton Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private const string API_URL = "api/vocab";
    private Vocab? _vocab;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public MudTable<Vocab> MudTable { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _vocab = new Vocab();
    }

    private async void Close()
    {
        await AddVocabAsync();

        Snackbar.Configuration.SnackbarVariant = Variant.Filled;
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
        Snackbar.Add("Vocab Added", Severity.Success, config =>
        {
            config.VisibleStateDuration = 1000;
            config.Icon = @Icons.Material.Outlined.Check;
        });

        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel()
    {
        _vocab = null;
        MudDialog.Close(DialogResult.Cancel());
    }

    private async Task AddVocabAsync()
    {
        await Http.PostAsJsonAsync<Vocab>(API_URL + "/create", _vocab);
        await MudTable.ReloadServerData();
    }
}
